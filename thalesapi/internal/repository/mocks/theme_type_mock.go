// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/theme_type.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockThemeTypeRepo is a mock of ThemeTypeRepo interface.
type MockThemeTypeRepo struct {
	ctrl     *gomock.Controller
	recorder *MockThemeTypeRepoMockRecorder
}

// MockThemeTypeRepoMockRecorder is the mock recorder for MockThemeTypeRepo.
type MockThemeTypeRepoMockRecorder struct {
	mock *MockThemeTypeRepo
}

// NewMockThemeTypeRepo creates a new mock instance.
func NewMockThemeTypeRepo(ctrl *gomock.Controller) *MockThemeTypeRepo {
	mock := &MockThemeTypeRepo{ctrl: ctrl}
	mock.recorder = &MockThemeTypeRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockThemeTypeRepo) EXPECT() *MockThemeTypeRepoMockRecorder {
	return m.recorder
}

// GetThemeTypes mocks base method.
func (m *MockThemeTypeRepo) GetThemeTypes() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetThemeTypes")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetThemeTypes indicates an expected call of GetThemeTypes.
func (mr *MockThemeTypeRepoMockRecorder) GetThemeTypes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThemeTypes", reflect.TypeOf((*MockThemeTypeRepo)(nil).GetThemeTypes))
}
